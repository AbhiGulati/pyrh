# This is a basic workflow to help you get started with Actions

name: linting

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  pull_request:
  push:
    branches: [ master ]

# TODO: test on more python versions
env:
  PYTHON_VERSION: ${{ '3.6.10' }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: set PY
      run: echo "::set-env name=PY::$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')"
    - name: Install/Configure Poetry and install packages
      run: | # Source so that it works in this session
        pip install --upgrade pip
        curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
        echo "::add-path::$HOME/.poetry/bin"
        source $HOME/.poetry/env
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path ~/.virtualenvs
    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache-poetry
      with:
        path: ~/.virtualenvs
        key: poetry-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          poetry-${{ hashFiles('poetry.lock') }}
    - name: Install Project Dependencies (Poetry)
      run: |
        poetry install -vvv
      if: steps.cache-poetry.outputs.cache-hit != 'true'
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
    - uses: pre-commit/action@v1.0.1
